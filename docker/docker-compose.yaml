networks:
  default:
    name: load-testing-network

services:

  prometheus:
    container_name: prometheus
    image: "prom/prometheus"
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prom.yaml:/etc/prometheus/prometheus.yml

  db-service:
    container_name: db-service
    cap_add:
      - NET_ADMIN
    tty: true
    build:
      context: db
    restart: always
    env_file:
      - db/.env
    ports:
      - "6000:5432"
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '1'
          memory: 250M
        reservations:
          memory: 250M

  influxdb:
    container_name: influxdb
    image: influxdb:1.8
    ports:
      - "8086:8086"
    environment:
      - INFLUXDB_DB=k6

  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: otel
    command: [ "--config=/etc/otel-collector.yaml" ]
    ports:
      - "1888:1888"  # pprof extension
      - "14268:14268"  # jaeger ingest
      - "3200:3200"   # tempo
      - "9095:9095" # tempo grpc
      - "4317:4317"  # otlp grpc
      - "4318:4318"  # otlp http
      - "9411:9411"   # zipkin
    volumes:
      - ./otel/otel-collector.yaml:/etc/otel-collector.yaml

  tempo:
    container_name: tempo
    image: grafana/tempo:latest
    command: [ "--target=all", "--multitenancy.enabled=false", "-config.file=/etc/tempo.yaml" ]
    ports:
      - "14268"  # jaeger ingest
      - "3200"   # tempo
      - "9095" # tempo grpc
      - "4317"  # otlp grpc
      - "4318"  # otlp http
      - "9411"   # zipkin
    volumes:
      - ./tempo/tempo.yaml:/etc/tempo.yaml
      - ./tempo-data:/var/tempo

  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_BASIC_ENABLED=false
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
    volumes:
      - ./grafana/dashboards:/var/lib/grafana/dashboards
      - ./grafana/grafana-dashboard.yaml:/etc/grafana/provisioning/dashboards/dashboard.yaml
      - ./grafana/grafana-datasource.yaml:/etc/grafana/provisioning/datasources/datasource.yaml

  spring-app-virtual:
    build:
      context: ..
    depends_on:
      - db-service
      - tempo
    restart: always
    environment:
      - THREAD_MODE=virtual
      - VIRTUAL_THREAD=true
    ports:
      - "8081:8080"
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '1'
          memory: 2G
        reservations:
          memory: 2G

  spring-app-standard:
    build:
      context: ..
    depends_on:
      - db-service
    restart: always
    environment:
      - THREAD_MODE=standard
      - VIRTUAL_THREAD=false
    ports:
      - "8082:8080"
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '1'
          memory: 2G
        reservations:
          memory: 2G